// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
    // sends command to the assistant
    // Toggle terminal
    // "f5": "debugger::RerunLastSession"
    // "shift-f5": "debugger::Stop",
    // "ctrl-shift-f5": "debugger::Restart",
    // "f6": "debugger::Pause",
    // "f7": "debugger::StepOver",
    // "ctrl-f11": "debugger::StepInto",
    // "shift-f11": "debugger::StepOut",
    // "ctrl-shift-d": "debug_panel::ToggleFocus",
    // },
    {
        "context": "Workspace && debugger_stopped",
        "bindings": {
            "space d c": "debugger::Continue",
            "space d i": "debugger::StepInto",
            "space d o": "debugger::StepOut",
            "ctrl-n": "debugger::StepOver",
            "space d r": "debugger::RerunLastSession"
        }
    },
    {
        "context": "Editor && vim_mode == normal",
        "bindings": {
            "space t": "terminal_panel::ToggleFocus",
            "space v": "pane::SplitRight",
            "space d a": "debugger::Start",
            "space d s": "debugger::Stop",
            "space d b": "editor::ToggleBreakpoint"
        }
    },
    {
        "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
        "bindings": {
            // Chat with AI
            "space a c": "agent::ToggleFocus",
            "space a n": "agent::NewTextThread",
            "space a i": "assistant::InlineAssist"
        }
    },
    {
        "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
        "bindings": {
            // put key-bindings here if you want them to work only in normal mode
            // Window movement bindings
            // Ctrl jklk to move between panes
            "ctrl-h": "workspace::ActivatePaneLeft",
            "ctrl-l": "workspace::ActivatePaneRight",
            "ctrl-k": "workspace::ActivatePaneUp",
            "ctrl-j": "workspace::ActivatePaneDown",

            // +LSP
            "space c a": "editor::ToggleCodeActions",
            "space .": "editor::ToggleCodeActions",
            "space c r": "editor::Rename",
            "g d": "editor::GoToDefinition",
            "g D": "editor::GoToDefinitionSplit",
            "g i": "editor::GoToImplementation",
            "g I": "editor::GoToImplementationSplit",
            "g t": "editor::GoToTypeDefinition",
            "g T": "editor::GoToTypeDefinitionSplit",
            "g r": "editor::FindAllReferences",
            "] d": "editor::GoToDiagnostic",
            "[ d": "editor::GoToPreviousDiagnostic",
            // TODO: Go to next/prev error
            "] e": "editor::GoToDiagnostic",
            "[ e": "editor::GoToPreviousDiagnostic",
            // Symbol search
            "s s": "outline::Toggle",
            "s S": "project_symbols::Toggle",
            // Diagnostic
            "space x x": "diagnostics::Deploy",

            // +Git
            // Git prev/next hunk
            "] h": "editor::GoToHunk",
            "[ h": "editor::GoToPreviousHunk",

            // TODO: git diff is not ready yet, refer https://github.com/zed-industries/zed/issues/8665#issuecomment-2194000497

            // + Buffers
            // Switch between buffers
            "shift-tab": "pane::ActivatePreviousItem",
            "tab": "pane::ActivateNextItem",
            // Close active panel
            "shift-q": "pane::CloseActiveItem",
            "ctrl-q": "pane::CloseActiveItem",
            "space b d": "pane::CloseActiveItem",
            // Close other items
            "space b o": "pane::CloseInactiveItems",
            // Save file
            "ctrl-s": "workspace::Save",
            // File finder
            "space space": "file_finder::Toggle",
            // Project search
            "space /": "pane::DeploySearch",
            // TODO: Open other files
            // Show project panel with current file
            "space e": "pane::RevealInProjectPanel"
        }
    },
    // Empty pane, set of keybindings that are available when there is no active editor
    {
        "context": "EmptyPane || SharedScreen",
        "bindings": {
            // Open file finder
            "space space": "file_finder::Toggle",
            // Open recent project
            "space f p": "projects::OpenRecent"
        }
    },
    // Comment code
    {
        "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
        "bindings": {
            // visual, visual line & visual block modes
            "g c": "editor::ToggleComments"
        }
    },
    // Rename
    {
        "context": "Editor && vim_operator == c",
        "bindings": {
            "c": "vim::CurrentLine",
            "r": "editor::Rename" // zed specifc
        }
    },
    // Code Action
    {
        "context": "Editor && vim_operator == c",
        "bindings": {
            "c": "vim::CurrentLine",
            "a": "editor::ToggleCodeActions" // zed specific
        }
    },
    {
        "context": "Terminal",
        "bindings": {
            "ctrl-h": "workspace::ActivatePaneLeft",
            "ctrl-l": "workspace::ActivatePaneRight",
            "ctrl-k": "workspace::ActivatePaneUp",
            "ctrl-j": "workspace::ActivatePaneDown"
        }
    },
    // File panel (netrw)
    {
        "context": "ProjectPanel && not_editing",
        "bindings": {
            "a": "project_panel::NewFile",
            "A": "project_panel::NewDirectory",
            "r": "project_panel::Rename",
            "d": "project_panel::Delete",
            "x": "project_panel::Cut",
            "c": "project_panel::Copy",
            "p": "project_panel::Paste",
            // Close project panel as project file panel on the right
            "q": "workspace::ToggleLeftDock",
            "space e": "workspace::ToggleLeftDock",
            "tab": "git_panel::ToggleFocus",
            // Navigate between panel
            "ctrl-h": "workspace::ActivatePaneLeft",
            "ctrl-l": "workspace::ActivatePaneRight",
            "ctrl-k": "workspace::ActivatePaneUp",
            "ctrl-j": "workspace::ActivatePaneDown"
        }
    },
    {
        "context": "GitPanel",
        "bindings": {
            "tab": "project_panel::ToggleFocus"
        }
    },
    // Panel nagivation
    {
        "context": "Dock",
        "bindings": {
            "ctrl-h": "workspace::ActivatePaneLeft",
            "ctrl-l": "workspace::ActivatePaneRight",
            "ctrl-k": "workspace::ActivatePaneUp",
            "ctrl-j": "workspace::ActivatePaneDown"
        }
    },
    {
        "context": "vim_mode == normal || vim_mode == visual",
        "bindings": {
            "s": ["vim::PushSneak", {}],
            "S": ["vim::PushSneakBackward", {}]
        }
    },
    {
        "context": "vim_mode == visual",
        "bindings": {
            "space r ": "repl::RunInPlace"
        }
    },
    {
        "context": "Editor",
        "bindings": {
            // "tab": "menu::SelectNext", // move to next item
            "tab": "menu::SelectNext", // move to next item
            "shift-tab": "menu::SelectPrevious", // move to previous item
            "space a q": "workspace::ToggleRightDock",
            "space d q": "workspace::ToggleBottomDock"
        }
    },
    {
        "context": "Editor && (showing_code_actions || showing_completions)",
        "bindings": {
            // "tab": "menu::SelectNext", // move to next item
            "tab": "editor::ContextMenuNext",
            "shift-tab": "editor::ContextMenuPrevious"
        }
    }
]
