// Place your key bindings in this file to override the defaults
[
// Cursor Specific Keybindings
    // New Chat window to talk to the AI
  { 
    "key": "space c",                
    "command": "workbench.panel.aichat.view.focus",
    "when": "(vim.mode == 'Normal || vim.mode == 'Visual') && editorTextFocus && !terminalFocus"
  },
  { 
    "key": "space a c",                
    "command": "aichat.insertselectionintochat",
    "when": "(vim.mode == 'Normal || vim.mode == 'Visual') && editorTextFocus && !terminalFocus"
  },
  { 
    "key": "space n c",                
    "command": "aichat.newchataction",
    "when": "(vim.mode == 'Normal || vim.mode == 'Visual') && editorFocus && !terminalFocus"
  },
  { 
    "key": "space p",                
    "command": "workbench.panel.composerViewPane2.view.focus",
    "when": "(vim.mode == 'Normal || vim.mode == 'Visual') && editorFocus && !terminalFocus"
  },
  { 
    "key": "space n p",                
    "command": "composer.startComposerPrompt",
    "when": "(vim.mode == 'Normal || vim.mode == 'Visual') && editorFocus && !terminalFocus"
  },
  { 
    "key": "space i",
    "command": "aipopup.action.modal.generate",
    "when": "vim.mode == 'Normal || vim.mode == 'Visual' && editorFocus && !terminalFocus",
    "args": {"invocationType":"new"}
  },

// Navigation
  // { "key": "space t",
  //   "command": "workbench.action.terminal.toggleTerminal",
  //   "when": "terminalFocus"
  // },
  { "key": "space z",
    "command": "workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  { "key": "tab",
    "command": "workbench.action.quickSwitchWindow",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  { "key": "shift+tab",
    "command": "workbench.action.quickSwitchWindow",
    "when": "editorTextFocus && neovim.mode == normal" 
  },
  {
    "key": "ctrl-h",
    "command": "workbench.action.navigateLeft",
    "when": "!terminalFocus && !filesExplorerFocus"
  },
  {
    "key": "ctrl-h",
    "command": "workbench.action.terminal.focus",
    "when": "editorTextFocus && terminalIsOpen && terminalPosition == 'left'"
  },
  {
    "key": "ctrl-h",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "editorTextFocus && sideBarVisible && explorerViewletVisible"
  },
  {
    "key": "ctrl-l",
    "command": "workbench.action.navigateRight",
    "when": "!terminalFocus && !sideBarFocus && !composerBarIsVisible && !aichatFocus"
  },
  {
    "key": "ctrl-l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl-l", 
    "command": "workbench.action.terminal.focus",
    "when": "editorTextFocus && terminalIsOpen && terminalPosition == 'right'"
  },
  {
    "key": "ctrl-k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl-k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl-j",
    "command": "workbench.action.navigateDown",
    "when": "!terminalIsOpen"
  },
  {
    "key": "ctrl-j", 
    "command": "workbench.action.terminal.focus",
    "when": "editorTextFocus && terminalIsOpen"
  },
  {
    "key": "space e",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.files.action.focusFilesExplorer"
      ]
    },
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus && !terminalFocus"
  },
  {
    "key": "space e",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.toggleSidebarVisibility"
      ]
    },
    "when": "filesExplorerFocus"
  },
  {
    "key": "space e",
    "when": "vim.mode == 'Normal' && editorTextFocus && foldersViewVisible && !terminalFocus",
    "command": "workbench.action.toggleSidebarVisibility"
  },
   {
    "key": "tab",
    "command": "workbench.action.nextEditorInGroup",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus) && !terminalFocus && !filesExplorerFocus"
  },
  {
    "key": "shift-tab",
    "command": "workbench.action.previousEditorInGroup", 
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus) && !terminalFocus && !filesExplorerFocus"
  },
  {
    "key": "space v s",
    "command": "workbench.action.splitEditor",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !terminalFocus"
  },
  {
    "key": "space h s",
    "command": "workbench.action.splitEditorDown",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !terminalFocus"
  },
  {
    "key": "shift-k",
    "command": "editor.action.moveLinesUpAction",
    "when": "vim.mode == 'VisualLine' && editorTextFocus && !terminalFocus"
  },
  {
      "key": "shift-j",
      "command": "editor.action.moveLinesDownAction",
      "when": "vim.mode == 'VisualLine' && editorTextFocus && !terminalFocus"
    },
    {
      "key": "shift-k",
      "command": "editor.action.showHover",
      "when": "vim.mode == 'Normal' && editorTextFocus && !terminalFocus"
    },
      {
    "key": "space b d",
    "command": "workbench.action.closeActiveEditor",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus && !terminalFocus"
  },
  // File Explorer
    {
      "key": "r",
      "command": "renameFile",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    },
    {
      "key": "c",
      "command": "filesExplorer.copy",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    },
    {
      "key": "p",
      "command": "filesExplorer.paste",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    },
    {
      "key": "x",
      "command": "filesExplorer.cut",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    },
    {
      "key": "d",
      "command": "deleteFile",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    },
    {
      "key": "a",
      "command": "explorer.newFile",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    },
    {
      "key": "s",
      "command": "explorer.openToSide",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !terminalFocus"
    },
    {
      "key": "enter",
      "command": "explorer.openAndPassFocus",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus && !terminalFocus"
    },
    {
      "key": "enter",
      "command": "list.toggleExpand",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus && !terminalFocus"
    },

  //Coding
    {
      "key": "space c",
      "command": "workbench.action.terminal.toggleTerminal",
      "when": "terminalFocus"
    },

    // Search
    {
      "key": "space s g",
      "command": "workbench.action.findInFiles",
      "when": "vim.mode == 'Normal' && !terminalFocus"
    },
    {
      "key": "space s f",
      "command": "workbench.action.quickOpen",
      "when": "vim.mode == 'Normal' && !terminalFocus"
    },

  // Quick Navigation
    {
      "key": "space space",
      "command": "workbench.action.showAllEditors",
      "when": "vim.mode == 'Normal' && !terminalFocus"
    },
  // Cycle through options in windows
    {
      "key": "tab",
      "command": "workbench.action.quickOpenNavigateNext",
      "when": "inQuickOpen"
    },
    {
      "key": "shift+tab",
      "command": "workbench.action.quickOpenNavigatePrevious",
      "when": "inQuickOpen"
    },
    {
      "key": "tab",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions || suggestWidgetVisible || editorTextFocus && hasOtherSuggestions && textInputFocus"
    },
    {
      "key": "shift+tab", 
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible || editorTextFocus && hasOtherSuggestions && textInputFocus"
    },

  // Debug
    {
      "key": "space d a",
      "command": "workbench.action.debug.selectandstart",
      "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && debuggersAvailable && !terminalFocus"
    },
    {
      "key": "space d t",
      "command": "workbench.action.debug.stop",
      "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && !focusedSessionIsAttached && !terminalFocus"
    },
    {
      "key": "space d o",
      "command": "workbench.action.debug.stepOver",
      "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped' && !terminalFocus"
    },
    {
      "key": "space d b",
      "command": "editor.debug.action.toggleBreakpoint",
      "when": "vim.mode == 'Normal' && editorTextFocus && !terminalFocus"
    },
    {
      "key": "space d e",
      "command": "editor.debug.action.showDebugHover",
      "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && debugState == 'stopped' && !terminalFocus"
    },
    {
      "key": "space d c",
      "command": "workbench.action.debug.continue",
      "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped' && !terminalFocus"
    },

  // Jupyter notebooks keybindings
  // A is add above, B is add below
    {
      "key": "m", 
      "command": "notebook.cell.insertMarkdownCellBelow",
      "when": "notebookEditorFocused && !inputFocus && vim.mode == 'Normal'"
    },
    {
      "key": "space enter",
      "command": "notebook.cell.execute", 
      "when": "notebookEditorFocused && vim.mode == 'Normal'"
    },
    {
      "key": "alt+j",
      "command": "notebook.cell.moveDown",
    },
    {
      "key": "alt+k", 
      "command": "notebook.cell.moveUp",
    },

  //Silly housekeeping to stop chords from ruining my life 
    {
    "key": "space",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": " " },
    "when": "terminal"
  },
  {
    "key": "space",     
    "command": "type",
    "args": { "text": " " },
    "when": "vim.mode == 'Insert' && editorTextFocus"
  },
]
